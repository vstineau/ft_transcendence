events {
	worker_connections 1024;
}
http {
	include mimes.types;
	default_type  application/octet-stream;
	sendfile        on; #send static files with more efficiency

	upstream frontend {
		server frontend:3000;
	}

	upstream backend {
		server backend:8080;
	}

	server {
		#listn https port for IPV4 and IPV6
		listen 443 ssl;
		listen[..]:443 ssl;

		# indicate where is the ssl certificate 
		ssl_certificate /etc/nginx/ssl/certificate.pem;
	
		# indicate where is the private key associated to the ssl certificate 
		ssl_certificate_key /etc/nginx/ssl/key.pem;

		location /api/ {
			proxy_pass http://backend; #redirect request begining with /api/ to backend
			proxy_http_version 1.1; #use HTTP/1.1 to transfers request between reverse proxy and backend 
			#add useful information to the header
			proxy_set_header Host $host; 
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
		}
		location / {
			proxy_pass http://frontend; #redirect no /api/ request to frontend
			proxy_set_header Host $host; 
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
		}
	}
	#listen http port and redirect eveything on https
	server {
		listen 80;
		listen [..]:80;
	    server_name localhost;

		return 301 https://$host$request_uri;
	}
}
