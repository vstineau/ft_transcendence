{"version":3,"file":"565.main.js","mappings":"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","sources":["webpack://frontend/./src/views/chat.views.ts","webpack://frontend/./src/chat/chat.ts"],"sourcesContent":["// =========================================\n// CHAT VIEWS - Toutes les vues liées au chat\n// =========================================\nexport async function ChatView() {\n    return /* HTML */ `\n\t\t<div class=\"flex h-screen bg-gray-50\">\n\t\t\t<!-- Sidebar avec les salles de chat -->\n\t\t\t<div class=\"w-80 bg-white border-r border-gray-200 flex flex-col\">\n\t\t\t\t<!-- Header du chat -->\n\t\t\t\t<div class=\"p-4 border-b border-gray-200 bg-black\">\n\t\t\t\t\t<h2 class=\"text-xl font-bold text-white\">Chat</h2>\n\t\t\t\t\t<p class=\"text-gray-300 text-sm\">Connecté</p>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Liste des salles -->\n\t\t\t\t<div class=\"flex-1 overflow-y-auto\">\n\t\t\t\t\t<div class=\"p-3\">\n\t\t\t\t\t\t<h3 class=\"text-xs font-semibold text-gray-500 uppercase tracking-wide mb-3\">Salles publiques</h3>\n\t\t\t\t\t\t<div id=\"public-rooms\" class=\"space-y-1\">\n\t\t\t\t\t\t\t<!-- Les salles seront ajoutées dynamiquement -->\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"p-3 border-t border-gray-100\">\n\t\t\t\t\t\t<h3 class=\"text-xs font-semibold text-gray-500 uppercase tracking-wide mb-3\">Messages privés</h3>\n\t\t\t\t\t\t<div id=\"private-rooms\" class=\"space-y-1\">\n\t\t\t\t\t\t\t<!-- Les conversations privées seront ajoutées dynamiquement -->\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Utilisateurs en ligne -->\n\t\t\t\t<div class=\"border-t border-gray-200 p-3\">\n\t\t\t\t\t<h3 class=\"text-xs font-semibold text-gray-500 uppercase tracking-wide mb-3\">En ligne</h3>\n\t\t\t\t\t<div id=\"online-users\" class=\"space-y-2\">\n\t\t\t\t\t\t<!-- Les utilisateurs en ligne seront ajoutés dynamiquement -->\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Zone de chat principale -->\n\t\t\t<div class=\"flex-1 flex flex-col\">\n\t\t\t\t<!-- Header de la conversation actuelle -->\n\t\t\t\t<div class=\"bg-white border-b border-gray-200 px-6 py-4\">\n\t\t\t\t\t<div id=\"chat-header\" class=\"flex items-center justify-between\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3 id=\"current-room-name\" class=\"text-lg font-semibold text-gray-900\">Sélectionnez une salle</h3>\n\t\t\t\t\t\t\t<p id=\"current-room-info\" class=\"text-sm text-gray-500\"></p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"flex space-x-2\">\n\t\t\t\t\t\t\t<button class=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n\t\t\t\t\t\t\t\t<svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button class=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n\t\t\t\t\t\t\t\t<svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Messages -->\n\t\t\t\t<div class=\"flex-1 overflow-y-auto bg-gray-50 p-6\">\n\t\t\t\t\t<div id=\"messages-container\" class=\"space-y-4\">\n\t\t\t\t\t\t<!-- Message par défaut quand aucune salle n'est sélectionnée -->\n\t\t\t\t\t\t<div id=\"no-room-selected\" class=\"text-center text-gray-500 mt-20\">\n\t\t\t\t\t\t\t<svg class=\"mx-auto w-16 h-16 text-gray-300 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"></path>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t<h3 class=\"text-lg font-medium text-gray-900 mb-2\">Commencez une conversation</h3>\n\t\t\t\t\t\t\t<p class=\"text-gray-500\">Sélectionnez une salle de chat pour commencer à discuter</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Zone de saisie -->\n\t\t\t\t<div class=\"bg-white border-t border-gray-200 p-4\">\n\t\t\t\t\t<div id=\"message-input-container\" class=\"hidden\">\n\t\t\t\t\t\t<div class=\"flex items-end space-x-2\">\n\t\t\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tid=\"message-input\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Tapez votre message...\"\n\t\t\t\t\t\t\t\t\tclass=\"w-full px-3 py-2 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-gray-500 focus:border-gray-500\"\n\t\t\t\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flex flex-col space-y-2\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tid=\"send-button\"\n\t\t\t\t\t\t\t\t\tclass=\"px-4 py-2 bg-black text-white rounded-lg hover:bg-gray-800 focus:ring-2 focus:ring-gray-500 transition-colors\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"></path>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass=\"px-4 py-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors\"\n\t\t\t\t\t\t\t\t\ttitle=\"Inviter à une partie de Pong\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`;\n}\n// Panel de chat flottant (popup)\nexport function ChatPanel() {\n    return /* HTML */ `\n\t\t<div id=\"chat-panel\" class=\"fixed bottom-24 right-6 w-80 h-96 bg-white rounded-xl shadow-2xl z-40 font-montserrat flex flex-col overflow-hidden\">\n\t\t\t<!-- Header du chat -->\n\t\t\t<div class=\"bg-black text-white p-4 rounded-t-xl\">\n\t\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t\t<h3 class=\"font-bold text-lg\">Chat</h3>\n\t\t\t\t\t<button id=\"chat-close\" class=\"text-white hover:bg-gray-800 rounded p-1\">\n\t\t\t\t\t\t<svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<!-- Onglets -->\n\t\t\t\t<div class=\"flex mt-3 space-x-1\">\n\t\t\t\t\t<button id=\"tab-global\" class=\"px-3 py-1 rounded text-sm bg-gray-800 text-white\">\n\t\t\t\t\t\tGlobal\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"tab-private\" class=\"px-3 py-1 rounded text-sm text-gray-300 hover:bg-gray-800 hover:text-white\">\n\t\t\t\t\t\tPrivé\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Zone des messages -->\n\t\t\t<div id=\"messages-container\" class=\"flex-1 overflow-y-auto p-4 space-y-3 bg-gray-50\">\n\t\t\t\t<!-- Les messages seront ajoutés dynamiquement -->\n\t\t\t</div>\n\n\t\t\t<!-- Zone de saisie -->\n\t\t\t<div class=\"p-3 bg-white border-t border-gray-200\">\n\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"message-input\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Tapez votre message...\"\n\t\t\t\t\t\tclass=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-gray-500 focus:border-gray-500\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"send-message\"\n\t\t\t\t\t\tclass=\"bg-black hover:bg-gray-800 text-white px-3 py-2 rounded-lg transition-colors\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`;\n}\n// Bouton flottant de chat (maintenant dans index.html, mais on garde la fonction pour référence)\nexport function ChatFloatingButton() {\n    return /* HTML */ `\n\t\t<button\n\t\t\tid=\"chat-fab\"\n\t\t\tclass=\"fixed bottom-6 right-6 bg-black hover:bg-gray-800 text-white rounded-full shadow-lg w-16 h-16 flex items-center justify-center transition-colors duration-200 z-50 font-montserrat\"\n\t\t\taria-label=\"Ouvrir le chat\"\n\t\t>\n\t\t\t<svg class=\"w-7 h-7\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n\t\t\t\t\td=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n\t\t\t</svg>\n\t\t\t<span id=\"chat-notif\" class=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold rounded-full px-2 py-0.5 shadow-lg min-w-[20px] h-5 flex items-center justify-center\">\n\t\t\t\t3\n\t\t\t</span>\n\t\t</button>\n\t`;\n}\n","import { ChatPanel } from '../views/chat.views';\nclass ChatManager {\n    state = {\n        isOpen: false,\n        activeTab: 'global',\n        currentRoom: null,\n        messages: [],\n        unreadCount: 3\n    };\n    mockMessages = [\n        {\n            id: '1',\n            userId: 'user1',\n            username: 'Alice',\n            content: 'Salut tout le monde ! 👋',\n            timestamp: new Date(Date.now() - 1000 * 60 * 5),\n            type: 'text'\n        },\n        {\n            id: '2',\n            userId: 'user2',\n            username: 'Bob',\n            content: 'Hey ! Quelqu\\'un pour une partie de Pong ?',\n            timestamp: new Date(Date.now() - 1000 * 60 * 3),\n            type: 'text'\n        },\n        {\n            id: '3',\n            userId: 'current-user',\n            username: 'Toi',\n            content: 'Je suis chaud ! 🏓',\n            timestamp: new Date(Date.now() - 1000 * 60 * 2),\n            type: 'text'\n        }\n    ];\n    constructor() {\n        this.initializeChat();\n    }\n    initializeChat() {\n        // Simuler des messages pour le développement\n        this.state.messages = this.mockMessages;\n        this.setupEventListeners();\n    }\n    setupEventListeners() {\n        const chatFab = document.getElementById('chat-fab');\n        if (chatFab) {\n            chatFab.addEventListener('click', () => {\n                this.toggleChat();\n            });\n        }\n    }\n    toggleChat() {\n        this.state.isOpen = !this.state.isOpen;\n        if (this.state.isOpen) {\n            this.openChat();\n            this.state.unreadCount = 0;\n            this.updateNotificationBadge();\n        }\n        else {\n            this.closeChat();\n        }\n    }\n    openChat() {\n        // Créer ou afficher le panel de chat\n        this.createChatPanel();\n    }\n    closeChat() {\n        // Fermer le panel de chat\n        const chatPanel = document.getElementById('chat-panel');\n        if (chatPanel) {\n            chatPanel.remove();\n        }\n    }\n    createChatPanel() {\n        // Si le panel existe déjà, ne pas le recréer\n        if (document.getElementById('chat-panel'))\n            return;\n        // Créer le panel avec la fonction ChatPanel\n        document.body.insertAdjacentHTML('beforeend', ChatPanel());\n        // Ajouter les event listeners pour le panel\n        this.setupPanelEventListeners();\n        // Render initial des messages\n        this.updateMessagesDisplay();\n        // Scroll vers le bas des messages\n        const messagesContainer = document.getElementById('messages-container');\n        if (messagesContainer) {\n            messagesContainer.scrollTop = messagesContainer.scrollHeight;\n        }\n    }\n    setupPanelEventListeners() {\n        // Fermer le chat\n        const closeBtn = document.getElementById('chat-close');\n        if (closeBtn) {\n            closeBtn.addEventListener('click', () => {\n                this.toggleChat();\n            });\n        }\n        // Envoyer un message\n        const sendBtn = document.getElementById('send-message');\n        const messageInput = document.getElementById('message-input');\n        if (sendBtn && messageInput) {\n            sendBtn.addEventListener('click', () => {\n                this.sendMessage(messageInput.value);\n                messageInput.value = '';\n            });\n            messageInput.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter') {\n                    this.sendMessage(messageInput.value);\n                    messageInput.value = '';\n                }\n            });\n        }\n        // Gestion des onglets\n        const tabGlobal = document.getElementById('tab-global');\n        const tabPrivate = document.getElementById('tab-private');\n        if (tabGlobal) {\n            tabGlobal.addEventListener('click', () => {\n                this.switchTab('global');\n            });\n        }\n        if (tabPrivate) {\n            tabPrivate.addEventListener('click', () => {\n                this.switchTab('private');\n            });\n        }\n    }\n    renderMessages() {\n        return this.state.messages.map(message => {\n            const isOwn = message.userId === 'current-user';\n            const time = this.formatTime(message.timestamp);\n            return `\n                <div class=\"flex ${isOwn ? 'justify-end' : 'justify-start'}\">\n                    <div class=\"max-w-xs\">\n                        ${!isOwn ? `<div class=\"text-xs text-gray-500 mb-1\">${message.username}</div>` : ''}\n                        <div class=\"px-3 py-2 rounded-lg text-sm ${isOwn\n                ? 'bg-blue-600 text-white'\n                : 'bg-white border border-gray-200'}\">\n                            ${this.escapeHtml(message.content)}\n                        </div>\n                        <div class=\"text-xs text-gray-400 mt-1 ${isOwn ? 'text-right' : 'text-left'}\">\n                            ${time}\n                        </div>\n                    </div>\n                </div>\n            `;\n        }).join('');\n    }\n    sendMessage(content) {\n        if (!content.trim())\n            return;\n        const message = {\n            id: Date.now().toString(),\n            userId: 'current-user',\n            username: 'Toi',\n            content: content.trim(),\n            timestamp: new Date(),\n            type: 'text'\n        };\n        this.state.messages.push(message);\n        this.updateMessagesDisplay();\n        // TODO: Envoyer via Socket.IO\n        console.log('Message envoyé:', message);\n    }\n    switchTab(tab) {\n        this.state.activeTab = tab;\n        // Mettre à jour l'UI des onglets\n        const tabGlobal = document.getElementById('tab-global');\n        const tabPrivate = document.getElementById('tab-private');\n        if (tabGlobal && tabPrivate) {\n            if (tab === 'global') {\n                tabGlobal.className = 'px-3 py-1 rounded text-sm bg-blue-700 text-white';\n                tabPrivate.className = 'px-3 py-1 rounded text-sm text-blue-200 hover:bg-blue-700 hover:text-white';\n            }\n            else {\n                tabPrivate.className = 'px-3 py-1 rounded text-sm bg-blue-700 text-white';\n                tabGlobal.className = 'px-3 py-1 rounded text-sm text-blue-200 hover:bg-blue-700 hover:text-white';\n            }\n        }\n        // TODO: Charger les messages du bon onglet\n        console.log('Onglet changé:', tab);\n    }\n    updateMessagesDisplay() {\n        const messagesContainer = document.getElementById('messages-container');\n        if (messagesContainer) {\n            messagesContainer.innerHTML = this.renderMessages();\n            messagesContainer.scrollTop = messagesContainer.scrollHeight;\n        }\n    }\n    updateNotificationBadge() {\n        const badge = document.getElementById('chat-notif');\n        if (badge) {\n            if (this.state.unreadCount > 0) {\n                badge.textContent = this.state.unreadCount > 99 ? '99+' : this.state.unreadCount.toString();\n                badge.style.display = 'flex';\n            }\n            else {\n                badge.style.display = 'none';\n            }\n        }\n    }\n    formatTime(date) {\n        const now = new Date();\n        const diff = now.getTime() - date.getTime();\n        if (diff < 60000) {\n            return 'À l\\'instant';\n        }\n        else if (diff < 3600000) {\n            const minutes = Math.floor(diff / 60000);\n            return `${minutes}min`;\n        }\n        else {\n            return date.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' });\n        }\n    }\n    escapeHtml(text) {\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n    addUnreadMessage() {\n        this.state.unreadCount++;\n        this.updateNotificationBadge();\n    }\n}\n// Instance globale du chat\nexport const chatManager = new ChatManager();\n"],"names":["ChatPanel","ChatFloatingButton","chatManager","state","isOpen","activeTab","currentRoom","messages","unreadCount","mockMessages","id","userId","username","content","timestamp","Date","now","type","constructor","this","initializeChat","setupEventListeners","chatFab","document","getElementById","addEventListener","toggleChat","openChat","updateNotificationBadge","closeChat","createChatPanel","chatPanel","remove","body","insertAdjacentHTML","setupPanelEventListeners","updateMessagesDisplay","messagesContainer","scrollTop","scrollHeight","closeBtn","sendBtn","messageInput","sendMessage","value","e","key","tabGlobal","tabPrivate","switchTab","renderMessages","map","message","isOwn","time","formatTime","escapeHtml","join","trim","toString","push","console","log","tab","className","innerHTML","badge","textContent","style","display","date","diff","getTime","Math","floor","toLocaleTimeString","hour","minute","text","div","createElement","addUnreadMessage"],"sourceRoot":""}